#+TITLE: Tagger, a nim library to write markup tags

Writing some simple xml:

#+begin_src nim
import tagger/tagMacro

createTag contacts
createTag contact, closed = false

let myContacts = contacts:
  contact:
    name = "Tony"
    phone = "654435435"
  contact:
    name = "Spammer"
    phone = "654435436"

echo myContacts
#+end_src

Gives us:

#+begin_src xml
<contacts>
  <contact name="Tony" phone="654435435"/>
  <contact name="Spammer" phone="654435436"/>
</contacts>
#+end_src

You can also write html with predefined tags:

#+begin_src nim
import tagger/html

let htmlPage = html:
  head:
    title:
      "A simple html page"
  body:
    hdiv:
      p:
        "A simple paragraph"

echo htmlPage
#+end_src

Gives us:

#+begin_src html
<html>
  <head>
    <title>A simple html page</title>
  </head>
  <body>
    <div>
      <p>A simple paragraph</p>
    </div>
  </body>
</html>
#+end_src

Note: actually writes an obfuscated version (no indentation nor
newlines).

Note: when using the html tag macros, some of them happen to be named
the same as some keywords, like ~div~, so in order to avoid this
limitation an ~h~ is added at the start (from html), so ~hdiv~.

Note: when defining tag parameters, you may want to write a paramater
which happens to be a reserved keyword, like ~type~ or ~method~, in
those cases you just need to surround it with double quotes.

#+begin_src nim
form:
  action = "login"
  "method" = "post"
  input:
    "type" = "text"
    name = "username"
  input:
    "type" = "submit"
    value = "Login"
#+end_src
